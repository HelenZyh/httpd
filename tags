!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BACKLOG	httpd.h	21;"	d
CC	Makefile	/^CC=gcc$/;"	m
CLI_BIN	Makefile	/^CLI_BIN=demo_client$/;"	m
CLI_SRC	Makefile	/^CLI_SRC=demo_client.c$/;"	m
COMM_SIZE	httpd.h	22;"	d
FLAGS	Makefile	/^FLAGS=-o$/;"	m
HTTP_VERSION	httpd.h	24;"	d
INCLUDE	Makefile	/^INCLUDE=.$/;"	m
LDFLAGS	Makefile	/^LDFLAGS=-lpthread#-static$/;"	m
LIB	Makefile	/^LIB=$/;"	m
MAIN_PAGE	httpd.h	23;"	d
PWD	Makefile	/^PWD=$(shell pwd)$/;"	m
SER_BIN	Makefile	/^SER_BIN=httpd$/;"	m
SER_SRC	Makefile	/^SER_SRC=httpd.c$/;"	m
Usage	demo_client.c	/^void Usage(const char *proc)$/;"	f
Usage	httpd.c	/^void Usage(const char *proc)$/;"	f
_DEMO_CLIENT_H_	demo_client.h	9;"	d
_HTTPD_H_	httpd.h	9;"	d
accept_request	httpd.c	/^void *accept_request(void *arg)$/;"	f
clear_header	httpd.c	/^void clear_header(int sock)$/;"	f
echo_error_to_client	httpd.c	/^void echo_error_to_client()$/;"	f
echo_html	httpd.c	/^void echo_html(int sock,const char *path,unsigned int file_size)$/;"	f
endl	cgi_bin/show_student_cgi.cpp	/^std::out<<"<\/table>"<<std::endl;$/;"	m	class:std	file:
endl	cgi_bin/show_student_cgi.cpp	/^std::out<<"<table>"<<std::endl;$/;"	m	class:std	file:
execute_cgi	httpd.c	/^void execute_cgi(int sock,const char*path,const char *method,const char *query_string)$/;"	f
get_line	httpd.c	/^int get_line(int sock,char *buf,int max_size)$/;"	f
main	demo_client.c	/^int main(int argc,char *argv[])$/;"	f
main	httpd.c	/^int main(int argc,char *argv[])$/;"	f
main	sql_connect/sql_connect.cpp	/^int main()$/;"	f
out	cgi_bin/show_student_cgi.cpp	/^std::out<<"<\/tr>";$/;"	m	class:std	file:
out	cgi_bin/show_student_cgi.cpp	/^std::out<<"<tr>";$/;"	m	class:std	file:
print_log	httpd.c	/^void print_log(const char *func,int line,int errno,const char *err_msg)$/;"	f
printf_debug	httpd.c	/^void printf_debug(const char *msg)$/;"	f
startup	httpd.c	/^int startup(const int port)$/;"	f
